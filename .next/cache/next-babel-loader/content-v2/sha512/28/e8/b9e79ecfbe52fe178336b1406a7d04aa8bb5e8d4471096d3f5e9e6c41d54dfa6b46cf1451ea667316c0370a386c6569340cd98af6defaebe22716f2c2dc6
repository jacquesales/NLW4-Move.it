{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jacqueline/Documents/NLW4/moveit-next/src/pages/index.tsx\";\nimport Head from 'next/head';\nimport { ChallengesProvider } from '../contexts/ChallengesContext';\nimport { CountdownProvider } from '../contexts/CountdownContext';\nimport ExperienceBar from '../components/ExperienceBar/ExperienceBar';\nimport Profile from '../components/Profile/Profile';\nimport CompletedChallenges from '../components/CompletedChallenges/CompletedChallenges';\nimport Countdown from '../components/Countdown/Countdown';\nimport ChallengeBox from '../components/ChallengeBox/ChallengeBox';\nimport styles from '../styles/pages/Home.module.css';\nexport default function Home() {\n  return /*#__PURE__*/_jsxDEV(ChallengesProvider, {\n    level: props.level,\n    currentExperience: props.currentExperience,\n    challengesCompleted: props.challengesCompleted,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"In\\xEDcio | move.it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExperienceBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountdownProvider, {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CompletedChallenges, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Countdown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ChallengeBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n} // função declarada dentro de uma página do next para manipular quais dados são repassados, da camada do next(node.js), pra camada front-end(client side)\n// não é definido direto no componente porque tudo que é assíncrono e chamada pra serviço externo não ficará disponível pra motores de busca\n\nexport const getServerSideProps = async ctx => {\n  // parâmetro context sigla ctx dentro do contexto do GetServerSideProps\n  const {\n    level,\n    currentExperience,\n    challengesCompleted\n  } = ctx.req.cookies; // convertendo as props para número pois chegam como strings dos cookies\n\n  return {\n    props: {\n      level: Number(level),\n      currentExperience: Number(currentExperience),\n      challengesCompleted: Number(challengesCompleted)\n    }\n  };\n}; // de dentro dessa função, o acesso ao serviço externo o next vai fazer a chamada API, pegar os dados e passá-los já prontos pro componente, antes mesmo de finalizar o carregamento da interface","map":{"version":3,"sources":["/home/jacqueline/Documents/NLW4/moveit-next/src/pages/index.tsx"],"names":["Head","ChallengesProvider","CountdownProvider","ExperienceBar","Profile","CompletedChallenges","Countdown","ChallengeBox","styles","Home","props","level","currentExperience","challengesCompleted","container","getServerSideProps","ctx","req","cookies","Number"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,mBAAP,MAAgC,uDAAhC;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AAEA,OAAOC,MAAP,MAAmB,iCAAnB;AAQA,eAAe,SAASC,IAAT,GAAgB;AAE7B,sBAEE,QAAC,kBAAD;AACE,IAAA,KAAK,EAAEC,KAAK,CAACC,KADf;AAEE,IAAA,iBAAiB,EAAED,KAAK,CAACE,iBAF3B;AAGE,IAAA,mBAAmB,EAAEF,KAAK,CAACG,mBAH7B;AAAA,2BAKE;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACM,SAAvB;AAAA,8BACE,QAAC,IAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cALF,eAQE,QAAC,iBAAD;AAAA,+BACE;AAAA,kCAEE;AAAA,oCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAQE;AAAA,mCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UAFF;AAkCD,C,CAGD;AACA;;AAEA,OAAO,MAAMC,kBAAsC,GAAG,MAAOC,GAAP,IAAe;AAAE;AAErE,QAAM;AAAEL,IAAAA,KAAF;AAASC,IAAAA,iBAAT;AAA4BC,IAAAA;AAA5B,MAAoDG,GAAG,CAACC,GAAJ,CAAQC,OAAlE,CAFmE,CAInE;;AACA,SAAO;AACLR,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEQ,MAAM,CAACR,KAAD,CADR;AAELC,MAAAA,iBAAiB,EAAEO,MAAM,CAACP,iBAAD,CAFpB;AAGLC,MAAAA,mBAAmB,EAAEM,MAAM,CAACN,mBAAD;AAHtB;AADF,GAAP;AAOD,CAZM,C,CAYL","sourcesContent":["import Head from 'next/head';\nimport { GetServerSideProps } from 'next';\nimport { ChallengesProvider } from '../contexts/ChallengesContext';\nimport { CountdownProvider } from '../contexts/CountdownContext';\n\nimport ExperienceBar from '../components/ExperienceBar/ExperienceBar';\nimport Profile from '../components/Profile/Profile';\nimport CompletedChallenges from '../components/CompletedChallenges/CompletedChallenges';\nimport Countdown from '../components/Countdown/Countdown';\nimport ChallengeBox from '../components/ChallengeBox/ChallengeBox';\n\nimport styles from '../styles/pages/Home.module.css';\n\ninterface HomeProps {\n  level: number;\n  currentExperience: number;\n  challengesCompleted: number;\n}\n\nexport default function Home() {\n\n  return (\n    \n    <ChallengesProvider \n      level={props.level} \n      currentExperience={props.currentExperience}\n      challengesCompleted={props.challengesCompleted} >\n\n      <div className={styles.container}>\n        <Head>\n          <title>Início | move.it</title>\n        </Head>\n      \n        <ExperienceBar />\n\n        {/* apenas essa seção da home precisa ter acesso ao contexto do countdown */}\n        <CountdownProvider > \n          <section>\n\n            <div>\n              <Profile />\n              <CompletedChallenges />\n              <Countdown />\n            </div>\n\n            <div>\n              <ChallengeBox />\n            </div>\n\n          </section>\n        </CountdownProvider>\n\n      </div>\n    </ChallengesProvider>    \n  )\n}\n\n\n// função declarada dentro de uma página do next para manipular quais dados são repassados, da camada do next(node.js), pra camada front-end(client side)\n// não é definido direto no componente porque tudo que é assíncrono e chamada pra serviço externo não ficará disponível pra motores de busca\n\nexport const getServerSideProps: GetServerSideProps = async (ctx) => { // parâmetro context sigla ctx dentro do contexto do GetServerSideProps\n\n  const { level, currentExperience, challengesCompleted } = ctx.req.cookies;\n  \n  // convertendo as props para número pois chegam como strings dos cookies\n  return {\n    props: {\n      level: Number(level),\n      currentExperience: Number(currentExperience),\n      challengesCompleted: Number(challengesCompleted)\n    }\n  }\n} // de dentro dessa função, o acesso ao serviço externo o next vai fazer a chamada API, pegar os dados e passá-los já prontos pro componente, antes mesmo de finalizar o carregamento da interface "]},"metadata":{},"sourceType":"module"}