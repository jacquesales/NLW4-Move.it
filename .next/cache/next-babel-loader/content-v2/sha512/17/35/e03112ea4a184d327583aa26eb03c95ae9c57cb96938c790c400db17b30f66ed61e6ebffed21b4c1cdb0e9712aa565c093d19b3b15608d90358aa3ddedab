{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jacqueline/Documents/NLW4/moveit-next/src/components/Countdown/Countdown.tsx\";\nimport { useState } from 'react';\nimport styles from '../../styles/components/Countdown.module.css';\n\nfunction Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(25 * 60); // tempo inicial do countdown em segundos\n\n  const minutes = Math.floor(time / 60); // arredondando pra baixo, desconsiderando segundos restantes\n\n  const seconds = time % 60; // resto da divisão pra considerar os segundos restantes\n\n  const minuteLeftRight = String(minutes).padStart(2, '0').split(''); // split separa  s t r i n g s\n  // transformando o nº em string, no caso de apenas um caracter (ex. 5 minutos) o padStart verifica se não tiver 2 carasteres ele preenche o restante pra esquerda (ex. 05 minutos)\n  // como o split devolve a separação em um array (com posições) podemos desestruturá-lo\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Countdown;","map":{"version":3,"sources":["/home/jacqueline/Documents/NLW4/moveit-next/src/components/Countdown/Countdown.tsx"],"names":["useState","styles","Countdown","time","setTime","minutes","Math","floor","seconds","minuteLeftRight","String","padStart","split","countdownContainer","countdownButton"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;;AAEA,SAASC,SAAT,GAAqB;AAEnB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAAC,KAAK,EAAN,CAAhC,CAFmB,CAEwB;;AAC3C,QAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,EAAlB,CAAhB,CAHmB,CAGmB;;AACtC,QAAMK,OAAO,GAAGL,IAAI,GAAG,EAAvB,CAJmB,CAIO;;AAE1B,QAAMM,eAAe,GAAGC,MAAM,CAACL,OAAD,CAAN,CAAgBM,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAxB,CANmB,CAMiD;AACpE;AACA;;AAGA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEX,MAAM,CAACY,kBAAvB;AAAA,8BAEE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eASE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAA,6BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAEZ,MAAM,CAACa,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;AACD,eAAeZ,SAAf","sourcesContent":["import { useState } from 'react';\nimport styles from '../../styles/components/Countdown.module.css';\n\nfunction Countdown() {\n\n  const [time, setTime] = useState(25 * 60); // tempo inicial do countdown em segundos\n  const minutes = Math.floor(time / 60) // arredondando pra baixo, desconsiderando segundos restantes\n  const seconds = time % 60 // resto da divisão pra considerar os segundos restantes\n  \n  const minuteLeftRight = String(minutes).padStart(2, '0').split(''); // split separa  s t r i n g s\n  // transformando o nº em string, no caso de apenas um caracter (ex. 5 minutos) o padStart verifica se não tiver 2 carasteres ele preenche o restante pra esquerda (ex. 05 minutos)\n  // como o split devolve a separação em um array (com posições) podemos desestruturá-lo\n\n\n  return (\n    <div>\n      <div className={styles.countdownContainer}>      \n      \n        <div>\n          <span></span>\n          <span></span>\n        </div>\n\n        <span>:</span>\n\n        <div>\n          <span>0</span>\n          <span>0</span>\n        </div>\n      </div>\n\n      <div>\n        <button type=\"button\" className={styles.countdownButton}>\n          Iniciar um ciclo\n        </button>\n      </div>\n    </div>\n  )\n}\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}