{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jacqueline/Documents/NLW4/moveit-next/src/contexts/ChallengesContext.tsx\";\nimport { createContext, useState } from 'react';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  // desestruturando as propriedades de children, que é todo o conteúdo de um componente\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1); // o nível inicia em 1\n\n  const {\n    0: currentExperience,\n    1: setcurrentExperience\n  } = useState(0); // a experiência do usuário inicia em 0\n\n  const [challengesCompleted, setchallengesCompleted];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return (\n    /*#__PURE__*/\n    // dentro do Context há um componente Provider e todos os elementos dentro dele terão acesso aos dados daquele contexto\n    _jsxDEV(ChallengesContext.Provider, {\n      value: {\n        level,\n        levelUp\n      },\n      children: [\"  \", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  );\n}","map":{"version":3,"sources":["/home/jacqueline/Documents/NLW4/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setcurrentExperience","challengesCompleted","setchallengesCompleted","levelUp"],"mappings":";;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAO,MAAMC,iBAAiB,gBAAGF,aAAa,CAAE,EAAF,CAAvC;AAMP,OAAO,SAASG,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAmE;AAAE;AAE1E,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,CAAD,CAAlC,CAFwE,CAEjC;;AACvC,QAAM;AAAA,OAACM,iBAAD;AAAA,OAAoBC;AAApB,MAA4CP,QAAQ,CAAC,CAAD,CAA1D,CAHwE,CAGT;;AAC/D,QAAM,CAACQ,mBAAD,EAAsBC,sBAAtB,CAAN;;AAEA,WAASC,OAAT,GAAmB;AACjBL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED;AAAA;AACE;AACA,YAAC,iBAAD,CAAmB,QAAnB;AAA4B,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAF;AAASM,QAAAA;AAAT,OAAnC;AAAA,uBACIP,QADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAMD","sourcesContent":["import { createContext, ReactNode, useState } from 'react';\n\nexport const ChallengesContext = createContext( {} );\n\ninterface ChallengesProviderProps { // o componente+Props recebe a propriedade children\n  children: ReactNode; // uma boa prática é fazer uma tipagem do children, onde o ReactNode aceita qualquer elemento filho\n}\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps) { // desestruturando as propriedades de children, que é todo o conteúdo de um componente\n  \n  const [level, setLevel] = useState(1); // o nível inicia em 1\n  const [currentExperience, setcurrentExperience] = useState(0); // a experiência do usuário inicia em 0\n  const [challengesCompleted, setchallengesCompleted]\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return (\n    // dentro do Context há um componente Provider e todos os elementos dentro dele terão acesso aos dados daquele contexto\n    <ChallengesContext.Provider value={{ level, levelUp }} >  {/* propriedade value é o que será enviado de informação */}\n      { children }\n    </ChallengesContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}